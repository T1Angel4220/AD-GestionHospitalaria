const { exec } = require('child_process');
const util = require('util');
const execAsync = util.promisify(exec);

async function corregirIdsDocker() {
  console.log('üîß CORRIGIENDO IDs CON DOCKER');
  console.log('=============================\n');
  
  try {
    // 1. Verificar IDs actuales
    console.log('üìä VERIFICANDO IDs ACTUALES:'.info);
    
    console.log('\nüè• CENTRO 1 (Central):');
    try {
      const { stdout: central } = await execAsync('docker exec hospital-mysql-central mysql -u root -ppassword -e "SELECT id, nombres, apellidos FROM hospital_central.pacientes ORDER BY id;"');
      console.log(central);
    } catch (error) {
      console.log('‚ùå Error accediendo a central:', error.message);
    }
    
    console.log('\nüè• CENTRO 2 (Guayaquil):');
    try {
      const { stdout: guayaquil } = await execAsync('docker exec hospital-mysql-guayaquil mysql -u root -ppassword -e "SELECT id, nombres, apellidos FROM hospital_guayaquil.pacientes ORDER BY id;"');
      console.log(guayaquil);
    } catch (error) {
      console.log('‚ùå Error accediendo a guayaquil:', error.message);
    }
    
    console.log('\nüè• CENTRO 3 (Cuenca):');
    try {
      const { stdout: cuenca } = await execAsync('docker exec hospital-mysql-cuenca mysql -u root -ppassword -e "SELECT id, nombres, apellidos FROM hospital_cuenca.pacientes ORDER BY id;"');
      console.log(cuenca);
    } catch (error) {
      console.log('‚ùå Error accediendo a cuenca:', error.message);
    }
    
    // 2. Corregir IDs duplicados
    console.log('\nüîß CORRIGIENDO IDs DUPLICADOS:'.info);
    
    // Cambiar Pedro de ID 4 a ID 6 en Guayaquil
    console.log('üè• Cambiando Pedro de ID 4 a ID 6 en Guayaquil...');
    try {
      await execAsync('docker exec hospital-mysql-guayaquil mysql -u root -ppassword -e "UPDATE hospital_guayaquil.pacientes SET id = 6 WHERE id = 4 AND nombres = \'Pedro RRR\';"');
      console.log('‚úÖ Pedro actualizado en Guayaquil');
    } catch (error) {
      console.log('‚ùå Error actualizando Pedro:', error.message);
    }
    
    // Cambiar Sebasti√°n de ID 5 a ID 7 en Cuenca
    console.log('üè• Cambiando Sebasti√°n de ID 5 a ID 7 en Cuenca...');
    try {
      await execAsync('docker exec hospital-mysql-cuenca mysql -u root -ppassword -e "UPDATE hospital_cuenca.pacientes SET id = 7 WHERE id = 5 AND nombres = \'Sebasti√°n Alejandro\';"');
      console.log('‚úÖ Sebasti√°n actualizado en Cuenca');
    } catch (error) {
      console.log('‚ùå Error actualizando Sebasti√°n:', error.message);
    }
    
    // 3. Verificar IDs corregidos
    console.log('\nüìä VERIFICANDO IDs CORREGIDOS:'.info);
    
    console.log('\nüè• CENTRO 1 (Central):');
    try {
      const { stdout: central2 } = await execAsync('docker exec hospital-mysql-central mysql -u root -ppassword -e "SELECT id, nombres, apellidos FROM hospital_central.pacientes ORDER BY id;"');
      console.log(central2);
    } catch (error) {
      console.log('‚ùå Error accediendo a central:', error.message);
    }
    
    console.log('\nüè• CENTRO 2 (Guayaquil):');
    try {
      const { stdout: guayaquil2 } = await execAsync('docker exec hospital-mysql-guayaquil mysql -u root -ppassword -e "SELECT id, nombres, apellidos FROM hospital_guayaquil.pacientes ORDER BY id;"');
      console.log(guayaquil2);
    } catch (error) {
      console.log('‚ùå Error accediendo a guayaquil:', error.message);
    }
    
    console.log('\nüè• CENTRO 3 (Cuenca):');
    try {
      const { stdout: cuenca2 } = await execAsync('docker exec hospital-mysql-cuenca mysql -u root -ppassword -e "SELECT id, nombres, apellidos FROM hospital_cuenca.pacientes ORDER BY id;"');
      console.log(cuenca2);
    } catch (error) {
      console.log('‚ùå Error accediendo a cuenca:', error.message);
    }
    
    console.log('\n‚úÖ IDs corregidos exitosamente');
    
  } catch (error) {
    console.log(`‚ùå Error general: ${error.message}`);
  }
}

corregirIdsDocker();

